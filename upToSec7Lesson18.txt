Python 3.7.4 (tags/v3.7.4:e09359112e, Jul  8 2019, 19:29:22) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> spam = ['hello', 'hi', 'howdy', 'heyas']
>>> spam.index('hello')
0
>>> index('hello')
Traceback (most recent call last):
  File "<pyshell#2>", line 1, in <module>
    index('hello')
NameError: name 'index' is not defined
>>> spam.index('heyas')
3
>>> spam.index('fasd')
Traceback (most recent call last):
  File "<pyshell#4>", line 1, in <module>
    spam.index('fasd')
ValueError: 'fasd' is not in list
>>> spam = ['zophie', 'pooka', 'fat-tail', 'pooka']
>>> spam.index('pooka')
1
>>> 
>>> 
>>> spam = ['cat', 'dog', 'bat']
>>> spam.append('mouse')
>>> spam
['cat', 'dog', 'bat', 'mouse']
>>> spam = ['cat', 'dog', 'bat']
>>> spam.insert(1, 'chicken')
>>> spam
['cat', 'chicken', 'dog', 'bat']
>>> spam.append('mouse')
>>> spam.append('mouse')
>>> spam.append('mouse')
>>> spam.append('mouse')
>>> spam
['cat', 'chicken', 'dog', 'bat', 'mouse', 'mouse', 'mouse', 'mouse']
>>> eggs = 'hello'
>>> eggs.append('world')
Traceback (most recent call last):
  File "<pyshell#21>", line 1, in <module>
    eggs.append('world')
AttributeError: 'str' object has no attribute 'append'
>>> spam = ['cat', 'bat', 'rat', 'elephant']
>>> spam.remove('bat')
>>> spam
['cat', 'rat', 'elephant']
>>> spam.remove('bat')
Traceback (most recent call last):
  File "<pyshell#25>", line 1, in <module>
    spam.remove('bat')
ValueError: list.remove(x): x not in list
>>> del spam[0]
>>> spam
['rat', 'elephant']
>>> 
>>> 
>>> 
>>> spam = ['cat', 'bat', 'rat', 'cat', 'bat', 'cat']
>>> spam.remove('cat')
>>> spam
['bat', 'rat', 'cat', 'bat', 'cat']
>>> spam = [2, 5, 3.14, 1, -7]
>>> spam.sort()
>>> spam
[-7, 1, 2, 3.14, 5]
>>> spam = ['ants', 'cats', 'dogs', 'badgers', 'elephants']
>>> spam.sort()
>>> spam
['ants', 'badgers', 'cats', 'dogs', 'elephants']
>>> spam.sort(reverse=true)
Traceback (most recent call last):
  File "<pyshell#40>", line 1, in <module>
    spam.sort(reverse=true)
NameError: name 'true' is not defined
>>> spam.sort(reverse=True)
>>> spam
['elephants', 'dogs', 'cats', 'badgers', 'ants']
>>> spam = [1,2,3,'Alice','Bob']
>>> spam.sort()
Traceback (most recent call last):
  File "<pyshell#44>", line 1, in <module>
    spam.sort()
TypeError: '<' not supported between instances of 'str' and 'int'
>>> spam = ['Alice', 'Bob', 'ants', 'badgers', 'Carol', 'cats']
>>> spam.sort
<built-in method sort of list object at 0x041E0DF0>
>>> spam.sort()
>>> span
Traceback (most recent call last):
  File "<pyshell#48>", line 1, in <module>
    span
NameError: name 'span' is not defined
>>> spam
['Alice', 'Bob', 'Carol', 'ants', 'badgers', 'cats']
>>> spam = ['a', 'z', 'A', 'Z']
>>> spam.sort(key=str.lower)
>>> spam
['a', 'A', 'z', 'Z']
>>> spam = ['a', 'z', 'A', 'Z']
>>> spam
['a', 'z', 'A', 'Z']
>>> spam.sort(key=str.lower)
>>> spam
['a', 'A', 'z', 'Z']
>>> list['Hello']
Traceback (most recent call last):
  File "<pyshell#57>", line 1, in <module>
    list['Hello']
TypeError: 'type' object is not subscriptable
>>> list('Hello')
['H', 'e', 'l', 'l', 'o']
>>> name = 'Zophie'
>>> name[0]
'Z'
>>> name[1:3]
'op'
>>> name[-2]
'i'
>>> 'Zo' in name
True
>>> 'XXX' in name
False
>>> for letter in name:
	print(letter)

	
Z
o
p
h
i
e
>>> name = 'Zophie the cat'
>>> name(&)
SyntaxError: invalid syntax
>>> name[7]
't'
>>> name[7] = 'X'
Traceback (most recent call last):
  File "<pyshell#71>", line 1, in <module>
    name[7] = 'X'
TypeError: 'str' object does not support item assignment
>>> 
>>> 
>>> 
>>> 
>>> name = 'Zophie a cat'
>>> newName = name[0:7] + 'the' + name[8:12]
>>> newName
'Zophie the cat'
>>> tuple([1,2,3])
(1, 2, 3)
>>> list((1,2,3))
[1, 2, 3]
>>> spam = 42
>>> cheese = spam
>>> spam = 100
>>> spam
100
>>> cheese
42
>>> spam = [0, 1, 2, 3, 4, 5]
>>> cheese = spam
>>> cheese[1] = 'Hello!
SyntaxError: EOL while scanning string literal
>>> '
SyntaxError: EOL while scanning string literal
>>> cheese[1] = 'Hello!'
>>> cheese
[0, 'Hello!', 2, 3, 4, 5]
>>> spam
[0, 'Hello!', 2, 3, 4, 5]
>>> 
================= RESTART: C:/Users/sudoh/Desktop/example.py =================
[1, 2, 3, 'Hello']
>>> import copy
>>> 
>>> 
>>> spam = ['A', 'B', 'C', 'D']
>>> cheese = copy.deepcopy(spam)
>>> cheese[1] = 42
>>> cheese
['A', 42, 'C', 'D']
>>> spam
['A', 'B', 'C', 'D']
>>> 
>>> 
>>> 
>>> 
>>> spam = ['apples',
	'oranges',
	'bananas',
	'cats']
>>> spam
['apples', 'oranges', 'bananas', 'cats']
>>> print('Four score and seven' + \
      'years ago)
      
SyntaxError: EOL while scanning string literal
>>> print('Four score and seven' + \
      'years ago')
Four score and sevenyears ago
>>> 
>>> 
>>> 
>>> 
>>> myCat = ['size': 'fat', 'color': 'gray', 'disposition': 'loud']
SyntaxError: invalid syntax
>>> myCat = {'size': 'fat', 'color': 'gray', 'disposition': 'loud'}
>>> myCat
{'size': 'fat', 'color': 'gray', 'disposition': 'loud'}
>>> myCat['size']
'fat'
>>> 'My cat has ' + myCat['color'] + ' fur.'
'My cat has gray fur.'
>>> spam ={12345: 'Luggage combination', 42: 'The Answer'}
>>> spam
{12345: 'Luggage combination', 42: 'The Answer'}
>>> spam[0]
Traceback (most recent call last):
  File "<pyshell#124>", line 1, in <module>
    spam[0]
KeyError: 0
>>> spam.index(0)
Traceback (most recent call last):
  File "<pyshell#125>", line 1, in <module>
    spam.index(0)
AttributeError: 'dict' object has no attribute 'index'
>>> [1, 2, 3] = [3, 2, 1]
SyntaxError: can't assign to literal
>>> [1, 2, 3] == [3, 2, 1]
False
>>> eggs = {'name': 'Zophie', 'species': 'cat', 'age': 8}
>>> eggs
{'name': 'Zophie', 'species': 'cat', 'age': 8}
>>> ham = {'species': 'cat', 'name': 'Zophie', 'age': 8}
>>> eggs == ham
True
>>> eggs['color']
Traceback (most recent call last):
  File "<pyshell#132>", line 1, in <module>
    eggs['color']
KeyError: 'color'
>>> 'name' in egss
Traceback (most recent call last):
  File "<pyshell#133>", line 1, in <module>
    'name' in egss
NameError: name 'egss' is not defined
>>> 'name' in eggs
True
>>> eggs
{'name': 'Zophie', 'species': 'cat', 'age': 8}
>>> 'name' not in eggs
False
>>> list(eggs.keys())
['name', 'species', 'age']
>>> list(eggs.values())
['Zophie', 'cat', 8]
>>> list(eggs.items())
[('name', 'Zophie'), ('species', 'cat'), ('age', 8)]
>>> eggs.keys()
dict_keys(['name', 'species', 'age'])
>>> 
>>> 
>>> for k in eggs.keys():
	print(k)

	
name
species
age
>>> for vin eggs.values():
	
SyntaxError: invalid syntax
>>> for v in eggs.values():
	print(v)

	
Zophie
cat
8
>>> for k, v in eggs.items():
	print(k, v)

	
name Zophie
species cat
age 8
>>> for i in eggs.items():
	print(i)

	
('name', 'Zophie')
('species', 'cat')
('age', 8)
>>> eggs
{'name': 'Zophie', 'species': 'cat', 'age': 8}
>>> 'cat' in eggs.values()
True
>>> 
>>> 
>>> eggs['color']
Traceback (most recent call last):
  File "<pyshell#160>", line 1, in <module>
    eggs['color']
KeyError: 'color'
>>> if 'color' in eggs:
	print(eggs['color'])

	
>>> eggs
{'name': 'Zophie', 'species': 'cat', 'age': 8}
>>> eggs.get('age', 0)
8
>>> eggs.get('color', '')
''
>>> 
>>> picnicItems = {'apples': 5, 'cups': 2}
>>> print('I am bringing ' + str(picnicItems.get('napkins', 0) + ' to the picnic.')

      
KeyboardInterrupt
>>> print('I am bringing ' + str(picnicItems.get('napkins', 0)) + ' to the picnic.')
I am bringing 0 to the picnic.
>>> print('I am bringing ' + str(picnicItems['napkins']) + ' to the picnic.')
Traceback (most recent call last):
  File "<pyshell#172>", line 1, in <module>
    print('I am bringing ' + str(picnicItems['napkins']) + ' to the picnic.')
KeyError: 'napkins'
>>> 
>>> 
>>> 
>>> eggs
{'name': 'Zophie', 'species': 'cat', 'age': 8}
>>> if 'color' not in eggs:
	eggs['color'] = 'black'

	
>>> eggs = {'name': 'Zophie', 'species': 'cat', 'age': 8}
>>> eggs
{'name': 'Zophie', 'species': 'cat', 'age': 8}
>>> eggs.setdefault('color', 'black')
'black'
>>> eggs
{'name': 'Zophie', 'species': 'cat', 'age': 8, 'color': 'black'}
>>> eggs.setdefault('color', 'orange')
'black'
>>> eggs
{'name': 'Zophie', 'species': 'cat', 'age': 8, 'color': 'black'}
>>> 
============= RESTART: C:/Users/sudoh/Desktop/characterCount.py =============
{'I': 1, 't': 6, ' ': 13, 'w': 2, 'a': 4, 's': 3, 'b': 1, 'r': 5, 'i': 6, 'g': 2, 'h': 3, 'c': 3, 'o': 2, 'l': 3, 'd': 3, 'y': 1, 'n': 4, 'A': 1, 'p': 1, ',': 1, 'e': 5, 'k': 2, '.': 1}
>>> 
============= RESTART: C:/Users/sudoh/Desktop/characterCount.py =============
{'I': 7, 'T': 6, ' ': 13, 'W': 2, 'A': 5, 'S': 3, 'B': 1, 'R': 5, 'G': 2, 'H': 3, 'C': 3, 'O': 2, 'L': 3, 'D': 3, 'Y': 1, 'N': 4, 'P': 1, ',': 1, 'E': 5, 'K': 2, '.': 1}
>>> 
============= RESTART: C:/Users/sudoh/Desktop/characterCount.py =============
{'T': 11051, 'H': 7405, 'E': 14279, ' ': 40775, 'P': 1984, 'R': 7686, 'O': 9938, 'J': 375, 'C': 2751, 'G': 2260, 'U': 4089, 'N': 7493, 'B': 2022, 'K': 987, 'F': 2477, 'M': 3812, 'A': 9153, 'D': 4440, 'L': 5285, 'I': 7854, ',': 2628, 'Y': 2938, 'W': 2856, 'S': 7382, '\n': 4853, 'V': 1169, '.': 2731, '-': 322, '/': 28, ':': 36, '2': 25, '5': 15, '0': 19, '1': 94, '[': 97, '#': 2, ']': 94, '9': 16, '7': 7, 'X': 160, '*': 32, '!': 491, '(': 38, ')': 38, '<': 2, '3': 16, '>': 2, "'": 991, 'Z': 35, ';': 393, 'Q': 76, '?': 371, '"': 24, '8': 9, '4': 9, '6': 7, '%': 1, '@': 2, '$': 2}
>>> 
============= RESTART: C:/Users/sudoh/Desktop/characterCount.py =============
{'\n': 4853,
 ' ': 40775,
 '!': 491,
 '"': 24,
 '#': 2,
 '$': 2,
 '%': 1,
 "'": 991,
 '(': 38,
 ')': 38,
 '*': 32,
 ',': 2628,
 '-': 322,
 '.': 2731,
 '/': 28,
 '0': 19,
 '1': 94,
 '2': 25,
 '3': 16,
 '4': 9,
 '5': 15,
 '6': 7,
 '7': 7,
 '8': 9,
 '9': 16,
 ':': 36,
 ';': 393,
 '<': 2,
 '>': 2,
 '?': 371,
 '@': 2,
 'A': 9153,
 'B': 2022,
 'C': 2751,
 'D': 4440,
 'E': 14279,
 'F': 2477,
 'G': 2260,
 'H': 7405,
 'I': 7854,
 'J': 375,
 'K': 987,
 'L': 5285,
 'M': 3812,
 'N': 7493,
 'O': 9938,
 'P': 1984,
 'Q': 76,
 'R': 7686,
 'S': 7382,
 'T': 11051,
 'U': 4089,
 'V': 1169,
 'W': 2856,
 'X': 160,
 'Y': 2938,
 'Z': 35,
 '[': 97,
 ']': 94}
>>> 
============= RESTART: C:/Users/sudoh/Desktop/characterCount.py =============
{'\n': 4853,
 ' ': 40775,
 '!': 491,
 '"': 24,
 '#': 2,
 '$': 2,
 '%': 1,
 "'": 991,
 '(': 38,
 ')': 38,
 '*': 32,
 ',': 2628,
 '-': 322,
 '.': 2731,
 '/': 28,
 '0': 19,
 '1': 94,
 '2': 25,
 '3': 16,
 '4': 9,
 '5': 15,
 '6': 7,
 '7': 7,
 '8': 9,
 '9': 16,
 ':': 36,
 ';': 393,
 '<': 2,
 '>': 2,
 '?': 371,
 '@': 2,
 'A': 9153,
 'B': 2022,
 'C': 2751,
 'D': 4440,
 'E': 14279,
 'F': 2477,
 'G': 2260,
 'H': 7405,
 'I': 7854,
 'J': 375,
 'K': 987,
 'L': 5285,
 'M': 3812,
 'N': 7493,
 'O': 9938,
 'P': 1984,
 'Q': 76,
 'R': 7686,
 'S': 7382,
 'T': 11051,
 'U': 4089,
 'V': 1169,
 'W': 2856,
 'X': 160,
 'Y': 2938,
 'Z': 35,
 '[': 97,
 ']': 94}
>>> cat = {'name': 'Zophie', 'age': 7, 'color': 'gray'}
>>> allCats = []
>>> allCats.append({'name': 'Zophie', 'age': 7, 'color': 'gray'})
>>> allCats.append({'name': 'Pooka', 'age': 5, 'color': 'black'})
>>> allCats.append({'name': 'Fat-tail', 'age': 5, 'color': 'gray'})
>>> allCats.append({'name': '???', 'age': -1, 'color': 'orange'})
>>> allCats
[{'name': 'Zophie', 'age': 7, 'color': 'gray'}, {'name': 'Pooka', 'age': 5, 'color': 'black'}, {'name': 'Fat-tail', 'age': 5, 'color': 'gray'}, {'name': '???', 'age': -1, 'color': 'orange'}]
>>> 
>>> 
>>> 
>>> 
>>> theBoard = {'top-L': ' ', 'top-M': ' ', 'top-R': ' ', 'mid-L': ' ', 'mid-M': ' ', 'mid-R': ' ', 'low-L': ' ', 'low-M': ' ', 'low-R': ' '}
>>> theBoard
{'top-L': ' ', 'top-M': ' ', 'top-R': ' ', 'mid-L': ' ', 'mid-M': ' ', 'mid-R': ' ', 'low-L': ' ', 'low-M': ' ', 'low-R': ' '}
>>> theBoard
{'top-L': ' ', 'top-M': ' ', 'top-R': ' ', 'mid-L': ' ', 'mid-M': ' ', 'mid-R': ' ', 'low-L': ' ', 'low-M': ' ', 'low-R': ' '}
>>> import pprint
>>> pprint.pprint(theBoard)
{'low-L': ' ',
 'low-M': ' ',
 'low-R': ' ',
 'mid-L': ' ',
 'mid-M': ' ',
 'mid-R': ' ',
 'top-L': ' ',
 'top-M': ' ',
 'top-R': ' '}
>>> theBoard['mid-M'] = ' '
>>> theBoard['mid-M'] = 'X'
>>> pprint.pprint(theBoard)
{'low-L': ' ',
 'low-M': ' ',
 'low-R': ' ',
 'mid-L': ' ',
 'mid-M': 'X',
 'mid-R': ' ',
 'top-L': ' ',
 'top-M': ' ',
 'top-R': ' '}
>>> theBoard['top-L'] = 'O'
>>> theBoard['top-M'] = 'O'
>>> theBoard['top-R'] = 'O'
>>> theBoard['mid-L'] = 'X'
>>> theBoard['low-R'] = 'X'
>>> 
>>> 
>>> pprint.pprint(theBoard)
{'low-L': ' ',
 'low-M': ' ',
 'low-R': 'X',
 'mid-L': 'X',
 'mid-M': 'X',
 'mid-R': ' ',
 'top-L': 'O',
 'top-M': 'O',
 'top-R': 'O'}
>>> def printBoard(board):
	print(board['top-L'] + '|' + board['top-M'] + '|' + board['top-R'])
	print('-----')
	print(board['mid-L'] + '|' + board['mid-M'] + '|' + board['mid-R'])
	print('-----')
	print(board['low-L'] + '|' + board['low-M'] + '|' + board['low-R'])

	
>>> 
>>> printBoard(theBoard)
O|O|O
-----
X|X| 
-----
 | |X
>>> type(9)
<class 'int'>
>>> type(42)
<class 'int'>
>>> type('hello')
<class 'str'>
>>> type(3.14)
<class 'float'>
>>> type(theBoard)
<class 'dict'>
>>> type(theBoard['top-R'])
<class 'str'>
>>> pprint.pprint(theBoard)
{'low-L': ' ',
 'low-M': ' ',
 'low-R': 'X',
 'mid-L': 'X',
 'mid-M': 'X',
 'mid-R': ' ',
 'top-L': 'O',
 'top-M': 'O',
 'top-R': 'O'}
>>> 
